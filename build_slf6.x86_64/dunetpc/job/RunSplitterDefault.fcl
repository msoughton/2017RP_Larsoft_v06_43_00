#include "services_dune.fcl"
#include "SSPToOffline.fcl"
#include "SplitterInput.fcl"

process_name: Splitter

services:
{
  TimeTracker:           {}
  MemoryTracker:         {} 
  TFileService:          { fileName: "SplitterTree.root" }
  RandomNumberGenerator: {} #ART native random number generator
  message:               @local::dune_message_services_prod_debug
  FileCatalogMetadata:   @local::art_file_catalog_data
                         @table::dune35t_services
}

source: @local::split_events

#############  To configure any parameters yourself #############
# source.WhichTrigger: [ 3 ]
# source.PTBTrigs:     [ 110, 111, 112, 113, 114, 115 ]
# source.PreTriggerTicks: 200
# source.PostTriggerTicks: 5200

############## A list of triggers........Please add to / change this list if YOU change develop.........###################
# WhichTrigger = 0  corresponds to  Making a trigger after a user-defined number of ticks - not hugely useful
# WhichTrigger = 1  corresponds to  Triggering on each new ADC payload
# WhichTrigger = 2  corresponds to  Triggering using SSP information - number of waveforms above a threshold you define.
# WhichTrigger = 3  corresponds to  Triggering on The PTB Triggers you specify using;	   PTBTrigs: [ x, y, z ]
# WhichTrigger = 4  corresponds to  Triggering on TPC ADC difference - 'Tickler Trigger'

# WhichTrigger = 5  YOUR TRIGGER.....# WhichTrigger = 0  corresponds to  Making a trigger after a user-defined number of ticks - not hugely useful
###########################################################################################################################

########### PTB Trigger information ###########
# Trigger 110 - Telescope
# Trigger 111 - East Lower / West Upper
# Trigger 112 - North Upper / South Lower
# Trigger 113 - North Lower / South Upper
# Trigger 114 - Reserved for later use....
# Trigger 115 - SSP Trigger
# Trigger 116 - RCE Trigger.....Not set up by PTB but added regardless.
###############################################

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
 producers:
 {
   rns:                 { module_type: RandomNumberSaver }
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ rns ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_%tc_split.root"
   dataTier:    "sliced"
   compressionLevel: 1
 }
}


