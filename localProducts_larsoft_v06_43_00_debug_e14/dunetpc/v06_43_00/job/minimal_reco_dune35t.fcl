#include "services_dune.fcl"
#include "caldata_dune.fcl"
#include "cluster_dune.fcl"
#include "trackfindermodules.fcl"
#include "calorimetry_dune35t.fcl"

## uncomment below for the anatree module
##include "srcs/dunetpc/dune/AnaTree/anatreemodule.fcl"

process_name: Reco

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "reco35t_hist.root" }
  TimeTracker:       {}
  RandomNumberGenerator: {} #ART native random number generator
  # message:      @local::standard_debug
                @table::dune35t_services 	     
}

services.message.destinations.warningmsg.type: "cout"


#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
#  calgaus:    @local::dune35t_calgaushf
  caldata:    @local::dune35t_calwire	    
  gaushit:    @local::dune35t_gaushitfinder
  hitcheat:   @local::dune35t_hitcheater
#  apahit:     @local::dune35t_apahitfinder

  cluster:    @local::standard_fuzzycluster
#  spacepts:   @local::standard_spacepts
#  ct:         @local::standard_cosmictracker
#      stitch: @local::standard_trackstitcher

 }

 analyzers:
 {
#      anatree:  @local::anatree_anatree
#      trkana:   @local::standard_trackanact
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco:   [ caldata, gaushit, hitcheat, cluster ]

#  reco: [caldata, hitcheat, cluster, spacepts, ct,stitch,calo]
 ana:  [  ]
# ana:  [anatree]
# ana2:  [trkana]
 stream1:  [ out1 ]

 trigger_paths: [ reco ]

 end_paths:     [ ana, stream1]  
# end_paths:     [ ana,ana2, stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "reco_dune35t.root" #default file name, can override from command line with -o or --output
 }
}

#physics.producers.calo:         @local::dune35t_calomc
#physics.producers.calo.TrackModuleLabel:                "stitch"
#physics.producers.calo.HitsModuleLabel:                "hitcheat"
#physics.producers.calo.SpacePointModuleLabel:                "spacepts"
#physics.producers.calo.MakeTree:                "true"
