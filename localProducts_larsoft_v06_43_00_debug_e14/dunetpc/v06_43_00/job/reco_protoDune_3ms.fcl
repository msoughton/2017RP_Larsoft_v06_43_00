#include "services_dune.fcl"
#include "caldata_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "cluster_dune.fcl"
#include "trackfindermodules_dune.fcl"
#include "pandoramodules.fcl"
#include "calorimetry_dune10kt.fcl"
#include "particleid.fcl"
#include "mctrutht0matching.fcl"
#include "t0reco.fcl"
#include "opticaldetectormodules_dune.fcl"
#include "showerfindermodules_dune.fcl"
#include "imagepatternalgs.fcl"

process_name: Reco

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "reco_protoDUNE_hist.root" }
  TimeTracker:       {}
  MemoryTracker:     {}
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::protodune_reco_services
}

services.DetectorPropertiesService.Electronlifetime: 3000

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents: 30000
  fileNames: ["detsim_single_protoDUNE.root"]
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
# random number saver
  rns:                 { module_type: RandomNumberSaver }
# convert raw::RawDigit to recob::wire
  caldata:            @local::producer_adcprep
# actual hit finder
  gaushit:            @local::dunefd_gaushitfinder
  fasthit:            @local::dunefd_fasthitfinder
#  cchit:              @local::dunefd_clustercrawlerhit
# actual disambiguation
  hitfd:              @local::dunefd_hitfinderfd
# reconstruction using disambiguated hits
  linecluster:        @local::dune35t_linecluster
  trajcluster:        @local::standard_trajcluster
  emtrackid:          @local::standard_emtrackclusterid
  calo:               @local::dune35t_calomc
  pandora:            @local::protodune_pandorabeam
# pandora stitching module goes here when it's ready
  pandoracalo:        @local::dune10kt_calomc
  pandorapid:         @local::standard_chi2pid
  pmtrack:            @local::dunefd_pmalgtrackmaker
  pmtrackcalo:        @local::dune10kt_calomc
  pmtrackpid:         @local::standard_chi2pid
  pmtrajfit:          @local::dunefd_pmalgtrajfitter
  pmtrajfitcalo:      @local::dune10kt_calomc
  pmtrajfitpid:       @local::standard_chi2pid
  pmtracktc:          @local::dunefd_pmalgtrackmaker
  pmtracktccalo:      @local::dune10kt_calomc
  pmtracktcpid:       @local::standard_chi2pid
# photon detector reconstruction
  ophit:              @local::dune35t_ophit 
  opflash:            @local::dune35t_opflash
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ rns, 
         #optical hits and flashes
         ophit, opflash,
         #TPC wire signals      
         caldata,
         #hit reconstruction
         gaushit, #cchit, fasthit, 
         #real disambiguation
         hitfd,
         #cluster reco
         linecluster,
         trajcluster,
         #pandora
         pandora, #pandora stitcher goes here
         pandoracalo, pandorapid,
         #pmatrack
         pmtrack, pmtrackcalo, pmtrackpid,
         pmtrajfit, pmtrajfitcalo, pmtrajfitpid,
         pmtracktc, pmtracktccalo, pmtracktcpid,
         emtrackid
         ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_reco.root"
   dataTier:    "full-reconstructed"
   compressionLevel: 1
 }
}

### Here, we overwrite ALL module labels with the ones defined above.

physics.producers.pmtrack.HitModuleLabel:               "linecluster"
physics.producers.pmtrack.ClusterModuleLabel:           "linecluster"
physics.producers.pmtrack.PMAlgTracking.RunVertexing:   true
physics.producers.pmtrack.PMAlgTracking.FlipToBeam:     true

physics.producers.pmtrajfit.HitModuleLabel:            "linecluster"
physics.producers.pmtrajfit.PfpModuleLabel:            "pandora"

physics.producers.pmtrackcalo.TrackModuleLabel:         "pmtrack"
physics.producers.pmtrackcalo.SpacePointModuleLabel:    "pmtrack"
physics.producers.pmtrackcalo.T0ModuleLabel:            ""
physics.producers.pmtrackcalo.MakeTree:                 false
physics.producers.pmtrackpid.CalorimetryModuleLabel:  "pmtrackcalo"
physics.producers.pmtrackpid.TrackModuleLabel:        "pmtrack"

physics.producers.pmtrajfitcalo.TrackModuleLabel:         "pmtrajfit"
physics.producers.pmtrajfitcalo.SpacePointModuleLabel:    "pmtrajfit"
physics.producers.pmtrajfitcalo.T0ModuleLabel:            ""
physics.producers.pmtrajfitcalo.MakeTree:                 false
physics.producers.pmtrajfitpid.CalorimetryModuleLabel:  "pmtrajfitcalo"
physics.producers.pmtrajfitpid.TrackModuleLabel:        "pmtrajfit"

physics.producers.pmtracktc.HitModuleLabel:             "trajcluster"
physics.producers.pmtracktc.ClusterModuleLabel:         "trajcluster"
physics.producers.pmtracktc.PMAlgTracking.RunVertexing:  true
physics.producers.pmtracktc.PMAlgTracking.MinSeedSize2ndPass:  2
physics.producers.pmtracktc.PMAlgTracking.FlipToBeam:    true
physics.producers.pmtracktc.PMAlgTracking.AutoFlip_dQdx: true

physics.producers.pmtracktccalo.TrackModuleLabel:         "pmtracktc"
physics.producers.pmtracktccalo.SpacePointModuleLabel:    "pmtracktc"
physics.producers.pmtracktccalo.T0ModuleLabel:            ""
physics.producers.pmtracktccalo.MakeTree:                 false

physics.producers.pmtracktcpid.CalorimetryModuleLabel:  "pmtracktccalo"
physics.producers.pmtracktcpid.TrackModuleLabel:        "pmtracktc"

physics.producers.linecluster.HitFinderModuleLabel:    "hitfd"

physics.producers.emtrackid.PointIdAlg.NNetModelFile:   "CnnModels/cnn_emtrackid_pitch_5_wire_32_drift_32_down_10_maxpool_notes_CollAndInd2GeVPiPlus.nnet"
physics.producers.emtrackid.PointIdAlg.PatchSizeW:      32
physics.producers.emtrackid.PointIdAlg.PatchSizeD:      32
physics.producers.emtrackid.PointIdAlg.DriftWindow:     10
physics.producers.emtrackid.PointIdAlg.DownscaleFn:     "maxpool"
physics.producers.emtrackid.HitModuleLabel:             "linecluster"
physics.producers.emtrackid.ClusterModuleLabel:         "linecluster"
physics.producers.emtrackid.TrackModuleLabel:           "pmtrack"
physics.producers.emtrackid.Views:                      [2]  # now lookinng only at collection views

physics.producers.calo.TrackModuleLabel:               "costrk"
physics.producers.calo.SpacePointModuleLabel:          "costrk"


#Pandora configurations

physics.producers.pandora.HitFinderModuleLabel:             "linecluster"
physics.producers.pandoracalo.TrackModuleLabel:             "pandora"
physics.producers.pandoracalo.SpacePointModuleLabel:        "pandora"
physics.producers.pandoracalo.T0ModuleLabel:                ""
physics.producers.pandoracalo.MakeTree:                     false
physics.producers.pandorapid.CalorimetryModuleLabel:        "pandoracalo"
physics.producers.pandorapid.TrackModuleLabel:              "pandora"

#Optical detector configuration
physics.producers.ophit.InputModule:                        "opdigi"
physics.producers.opflash.InputModule:                      "ophit"



